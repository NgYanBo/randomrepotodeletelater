{"ast":null,"code":"var _jsxFileName = \"/Users/yan.bo.ng/Downloads/team8-portfolio-optimizer-new 2/src/components/page7.js\";\nimport React, { Component } from \"react\";\nimport { Radio, Input, Popconfirm, Button, message, Space } from \"antd\";\nimport { Select } from \"antd\";\nimport { Checkbox, Row, Col } from \"antd\";\nimport _ from \"lodash\";\nimport { Table, Tag, Typography } from \"antd\";\nconst Text = Typography.Text;\n\nfunction confirm() {\n  message.info('Feature coming soon!');\n}\n\nconst Option = Select.Option;\nconst columns = [{\n  title: \"No.\",\n  dataIndex: \"index\",\n  key: \"index\"\n}, {\n  title: \"Name\",\n  dataIndex: \"name\",\n  key: \"name\"\n}, {\n  title: \"Price\",\n  dataIndex: \"price\",\n  key: \"price\"\n}, {\n  title: 'Purchase',\n  key: 'purchase',\n  render: (text, record) => React.createElement(Popconfirm, {\n    placement: \"rightTop\",\n    title: text,\n    onConfirm: confirm,\n    okText: \"Yes\",\n    cancelText: \"No\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40\n    },\n    __self: this\n  }, React.createElement(Button, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47\n    },\n    __self: this\n  }, \"Invest\"))\n}];\n\nclass step5 extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      tableData: [],\n      ans: [],\n      isMax: false,\n      checked: []\n    };\n  }\n\n  componentDidMount() {}\n\n  render() {\n    const data = this.props.data;\n    const tableData = this.state.tableData;\n\n    if (this.props.currentStep !== 6) {\n      return null;\n    }\n\n    let newData = []; // console.log(data, \"page 7 data\");\n\n    if (!_.isEmpty(data) && _.isEmpty(tableData)) {\n      let count = 1;\n      data.stock_allocation.map(item => {\n        newData.push({\n          index: count++,\n          name: item[0],\n          price: item[1]\n        });\n      });\n      this.setState({\n        tableData: newData\n      });\n    }\n\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 83\n      },\n      __self: this\n    }, React.createElement(\"label\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 84\n      },\n      __self: this\n    }, \"Based on your inputs, your risk profile is: \", React.createElement(Text, {\n      type: \"warning\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 85\n      },\n      __self: this\n    }, data.risk_profile), \". You will have to keep a minimum of $20,000 in your CPF OA account, taking that into account, maximum investible account is \", React.createElement(Text, {\n      type: \"warning\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 86\n      },\n      __self: this\n    }, \"$\", data.CPFOA)), React.createElement(\"label\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 89\n      },\n      __self: this\n    }, \"We recommend you to invest a total of as an investment portfolio outlined below:\"), React.createElement(Table, {\n      columns: columns,\n      dataSource: tableData,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 93\n      },\n      __self: this\n    }), React.createElement(\"label\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 94\n      },\n      __self: this\n    }, \"The expected return of this portfolio is \", React.createElement(Text, {\n      type: \"warning\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 95\n      },\n      __self: this\n    }, data.best_return), \", with a risk of \", React.createElement(Text, {\n      type: \"warning\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 95\n      },\n      __self: this\n    }, data.optimal_risk), \", which is well within your risk appetite of \", React.createElement(Text, {\n      type: \"warning\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 95\n      },\n      __self: this\n    }, data.rules_risk), \" that is calculated according to your risk profile.\\\"\"));\n  }\n\n}\n\nexport default step5;","map":{"version":3,"sources":["/Users/yan.bo.ng/Downloads/team8-portfolio-optimizer-new 2/src/components/page7.js"],"names":["React","Component","Radio","Input","Popconfirm","Button","message","Space","Select","Checkbox","Row","Col","_","Table","Tag","Typography","Text","confirm","info","Option","columns","title","dataIndex","key","render","text","record","step5","state","tableData","ans","isMax","checked","componentDidMount","data","props","currentStep","newData","isEmpty","count","stock_allocation","map","item","push","index","name","price","setState","risk_profile","CPFOA","best_return","optimal_risk","rules_risk"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport { Radio, Input, Popconfirm, Button, message, Space } from \"antd\";\nimport { Select } from \"antd\";\nimport { Checkbox, Row, Col } from \"antd\";\nimport _ from \"lodash\";\n\n\n\nimport { Table, Tag, Typography } from \"antd\";\n\nconst { Text } = Typography;\n\n\n\nfunction confirm() {\n  message.info('Feature coming soon!');\n}\n\nconst { Option } = Select;\nconst columns = [\n  {\n    title: \"No.\",\n    dataIndex: \"index\",\n    key: \"index\",\n  },\n  {\n    title: \"Name\",\n    dataIndex: \"name\",\n    key: \"name\",\n  },\n  {\n    title: \"Price\",\n    dataIndex: \"price\",\n    key: \"price\",\n  },\n  {\n    title: 'Purchase',\n    key: 'purchase',\n    render: (text, record) => (\n      <Popconfirm \n      placement=\"rightTop\"\n      title={text}\n      onConfirm={confirm}\n      okText=\"Yes\"\n      cancelText=\"No\"\n      >\n      <Button>Invest</Button>\n      </Popconfirm>\n    ),\n  },\n];\n\nclass step5 extends Component {\n  state = {\n    tableData: [],\n    ans: [],\n    isMax: false,\n    checked: [],\n  };\n  componentDidMount() {}\n\n  render() {\n    const { data } = this.props;\n    const { tableData } = this.state;\n    if (this.props.currentStep !== 6) {\n      return null;\n    }\n    let newData = [];\n    // console.log(data, \"page 7 data\");\n    if (!_.isEmpty(data) && _.isEmpty(tableData)) {\n      let count = 1;\n      data.stock_allocation.map((item) => {\n        newData.push({\n          index: count++,\n          name: item[0],\n          price: item[1],\n        });\n      });\n      this.setState({ tableData: newData });\n    }\n\n    return (\n      <div>\n        <label>\n          Based on your inputs, your risk profile is: <Text type=\"warning\">{data.risk_profile}</Text>. \n          You will have to keep a minimum of $20,000 in your CPF OA account, taking that into account, maximum investible account is <Text type=\"warning\">${data.CPFOA}</Text>\n        </label>\n        {/* <label>You have selected your preferred stocks of:</label> */}\n        <label>\n          We recommend you to invest a total of as an investment portfolio\n          outlined below:\n        </label>\n        <Table columns={columns} dataSource={tableData}/>\n        <label>\n          The expected return of this portfolio is <Text type=\"warning\">{data.best_return}</Text>, with a risk of <Text type=\"warning\">{data.optimal_risk}</Text>, which is well within your risk appetite of <Text type=\"warning\">{data.rules_risk}</Text> that is calculated according to your risk profile.\"\n        </label>\n      </div>\n    );\n  }\n}\n\nexport default step5;\n"]},"metadata":{},"sourceType":"module"}
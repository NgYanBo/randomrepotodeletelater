{"ast":null,"code":"var _jsxFileName = \"/Users/xunda.zhang/Documents/Developer/Misc/fe_package/team8-portfolio-optimizer-/src/components/page7.js\";\nimport React, { Component } from \"react\";\nimport { Radio, Input } from \"antd\";\nimport { Select } from \"antd\";\nimport { Checkbox, Row, Col } from \"antd\";\nimport _ from \"lodash\";\nimport { Table, Tag } from \"antd\";\nconst Option = Select.Option;\nconst columns = [{\n  title: \"No.\",\n  dataIndex: \"index\",\n  key: \"index\",\n  render: text => React.createElement(\"a\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 14\n    },\n    __self: this\n  }, text)\n}, {\n  title: \"Name\",\n  dataIndex: \"name\",\n  key: \"name\"\n}, {\n  title: \"Price\",\n  dataIndex: \"price\",\n  key: \"price\"\n}];\n\nclass step5 extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      tableData: [],\n      ans: [],\n      isMax: false,\n      checked: []\n    };\n  }\n\n  componentDidMount() {}\n\n  render() {\n    const data = this.props.data;\n    const tableData = this.state.tableData;\n\n    if (this.props.currentStep !== 6) {\n      return null;\n    }\n\n    let newData = [];\n    console.log(data, \"page 7 data\");\n\n    if (!_.isEmpty(data) && _.isEmpty(tableData)) {\n      let count = 0;\n      data.stock_allocation.map(item => {\n        newData.push({\n          index: count++,\n          name: item[0],\n          price: item[1]\n        });\n      });\n      this.setState({\n        tableData: newData\n      });\n    }\n\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 58\n      },\n      __self: this\n    }, React.createElement(\"label\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 59\n      },\n      __self: this\n    }, \"Based on your inputs, your risk profile is: \", data.risk_profile), React.createElement(\"label\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 63\n      },\n      __self: this\n    }, \"We recommend you to invest a total of as an investment portfolio outlined below:\"), React.createElement(Table, {\n      columns: columns,\n      dataSource: tableData,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 67\n      },\n      __self: this\n    }), React.createElement(\"label\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 68\n      },\n      __self: this\n    }, \"The expected return of this portfolio is \", data.best_return, \"%. The expected risk is within your risk profile.\"));\n  }\n\n}\n\nexport default step5;","map":{"version":3,"sources":["/Users/xunda.zhang/Documents/Developer/Misc/fe_package/team8-portfolio-optimizer-/src/components/page7.js"],"names":["React","Component","Radio","Input","Select","Checkbox","Row","Col","_","Table","Tag","Option","columns","title","dataIndex","key","render","text","step5","state","tableData","ans","isMax","checked","componentDidMount","data","props","currentStep","newData","console","log","isEmpty","count","stock_allocation","map","item","push","index","name","price","setState","risk_profile","best_return"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,KAAT,EAAgBC,KAAhB,QAA6B,MAA7B;AACA,SAASC,MAAT,QAAuB,MAAvB;AACA,SAASC,QAAT,EAAmBC,GAAnB,EAAwBC,GAAxB,QAAmC,MAAnC;AACA,OAAOC,CAAP,MAAc,QAAd;AAEA,SAASC,KAAT,EAAgBC,GAAhB,QAA2B,MAA3B;MACQC,M,GAAWP,M,CAAXO,M;AACR,MAAMC,OAAO,GAAG,CACd;AACEC,EAAAA,KAAK,EAAE,KADT;AAEEC,EAAAA,SAAS,EAAE,OAFb;AAGEC,EAAAA,GAAG,EAAE,OAHP;AAIEC,EAAAA,MAAM,EAAGC,IAAD,IAAU;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAIA,IAAJ;AAJpB,CADc,EAOd;AACEJ,EAAAA,KAAK,EAAE,MADT;AAEEC,EAAAA,SAAS,EAAE,MAFb;AAGEC,EAAAA,GAAG,EAAE;AAHP,CAPc,EAYd;AACEF,EAAAA,KAAK,EAAE,OADT;AAEEC,EAAAA,SAAS,EAAE,OAFb;AAGEC,EAAAA,GAAG,EAAE;AAHP,CAZc,CAAhB;;AAmBA,MAAMG,KAAN,SAAoBjB,SAApB,CAA8B;AAAA;AAAA;AAAA,SAC5BkB,KAD4B,GACpB;AACNC,MAAAA,SAAS,EAAE,EADL;AAENC,MAAAA,GAAG,EAAE,EAFC;AAGNC,MAAAA,KAAK,EAAE,KAHD;AAINC,MAAAA,OAAO,EAAE;AAJH,KADoB;AAAA;;AAO5BC,EAAAA,iBAAiB,GAAG,CAAE;;AAEtBR,EAAAA,MAAM,GAAG;AAAA,UACCS,IADD,GACU,KAAKC,KADf,CACCD,IADD;AAAA,UAECL,SAFD,GAEe,KAAKD,KAFpB,CAECC,SAFD;;AAGP,QAAI,KAAKM,KAAL,CAAWC,WAAX,KAA2B,CAA/B,EAAkC;AAChC,aAAO,IAAP;AACD;;AACD,QAAIC,OAAO,GAAG,EAAd;AACAC,IAAAA,OAAO,CAACC,GAAR,CAAYL,IAAZ,EAAkB,aAAlB;;AACA,QAAI,CAACjB,CAAC,CAACuB,OAAF,CAAUN,IAAV,CAAD,IAAoBjB,CAAC,CAACuB,OAAF,CAAUX,SAAV,CAAxB,EAA8C;AAC5C,UAAIY,KAAK,GAAG,CAAZ;AACAP,MAAAA,IAAI,CAACQ,gBAAL,CAAsBC,GAAtB,CAA2BC,IAAD,IAAU;AAClCP,QAAAA,OAAO,CAACQ,IAAR,CAAa;AACXC,UAAAA,KAAK,EAAEL,KAAK,EADD;AAEXM,UAAAA,IAAI,EAAEH,IAAI,CAAC,CAAD,CAFC;AAGXI,UAAAA,KAAK,EAAEJ,IAAI,CAAC,CAAD;AAHA,SAAb;AAKD,OAND;AAOA,WAAKK,QAAL,CAAc;AAAEpB,QAAAA,SAAS,EAAEQ;AAAb,OAAd;AACD;;AAED,WACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uDAC+CH,IAAI,CAACgB,YADpD,CADF,EAKE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,0FALF,EASE,oBAAC,KAAD;AAAO,MAAA,OAAO,EAAE7B,OAAhB;AAAyB,MAAA,UAAU,EAAEQ,SAArC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MATF,EAUE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oDAC4CK,IAAI,CAACiB,WADjD,sDAVF,CADF;AAiBD;;AA9C2B;;AAiD9B,eAAexB,KAAf","sourcesContent":["import React, { Component } from \"react\";\nimport { Radio, Input } from \"antd\";\nimport { Select } from \"antd\";\nimport { Checkbox, Row, Col } from \"antd\";\nimport _ from \"lodash\";\n\nimport { Table, Tag } from \"antd\";\nconst { Option } = Select;\nconst columns = [\n  {\n    title: \"No.\",\n    dataIndex: \"index\",\n    key: \"index\",\n    render: (text) => <a>{text}</a>,\n  },\n  {\n    title: \"Name\",\n    dataIndex: \"name\",\n    key: \"name\",\n  },\n  {\n    title: \"Price\",\n    dataIndex: \"price\",\n    key: \"price\",\n  },\n];\n\nclass step5 extends Component {\n  state = {\n    tableData: [],\n    ans: [],\n    isMax: false,\n    checked: [],\n  };\n  componentDidMount() {}\n\n  render() {\n    const { data } = this.props;\n    const { tableData } = this.state;\n    if (this.props.currentStep !== 6) {\n      return null;\n    }\n    let newData = [];\n    console.log(data, \"page 7 data\");\n    if (!_.isEmpty(data) && _.isEmpty(tableData)) {\n      let count = 0;\n      data.stock_allocation.map((item) => {\n        newData.push({\n          index: count++,\n          name: item[0],\n          price: item[1],\n        });\n      });\n      this.setState({ tableData: newData });\n    }\n\n    return (\n      <div>\n        <label>\n          Based on your inputs, your risk profile is: {data.risk_profile}\n        </label>\n        {/* <label>You have selected your preferred stocks of:</label> */}\n        <label>\n          We recommend you to invest a total of as an investment portfolio\n          outlined below:\n        </label>\n        <Table columns={columns} dataSource={tableData} />\n        <label>\n          The expected return of this portfolio is {data.best_return}%. The\n          expected risk is within your risk profile.\n        </label>\n      </div>\n    );\n  }\n}\n\nexport default step5;\n"]},"metadata":{},"sourceType":"module"}
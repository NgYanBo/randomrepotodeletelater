{"ast":null,"code":"var _jsxFileName = \"/Users/xunda.zhang/Documents/Developer/Misc/fe_package/team8-portfolio-optimizer-/src/components/BasicInfo.js\";\nimport React from \"react\";\nimport { useForm } from \"react-hook-form\";\nimport { Component } from \"react\";\nimport { Form, Input, Button, Checkbox } from \"antd\";\nimport { UserOutlined } from \"@ant-design/icons\";\n\nclass step1 extends Component {\n  constructor(...args) {\n    super(...args);\n\n    this.onFinish = values => {\n      console.log(\"Success:\", values);\n    };\n\n    this.onFinishFailed = errorInfo => {\n      console.log(\"Failed:\", errorInfo);\n    };\n  }\n\n  render() {\n    const layout = {\n      labelCol: {\n        span: 8\n      },\n      wrapperCol: {\n        span: 16\n      }\n    };\n    const tailLayout = {\n      wrapperCol: {\n        offset: 8,\n        span: 16\n      }\n    };\n\n    if (this.props.currentStep !== 1) {\n      // Prop: The current step\n      return null;\n    } // The markup for the Step 1 UI\n\n\n    return React.createElement(Form, Object.assign({}, layout, {\n      name: \"basic\",\n      initialValues: {\n        remember: true\n      },\n      onFinish: this.onFinish,\n      onFinishFailed: this.onFinishFailed,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 38\n      },\n      __self: this\n    }), React.createElement(Form.Item, {\n      label: \"Username\",\n      name: \"username\",\n      rules: [{\n        required: true,\n        message: \"Please input your username!\"\n      }],\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 47\n      },\n      __self: this\n    }, React.createElement(Input, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 57\n      },\n      __self: this\n    })), React.createElement(Form.Item, {\n      label: \"Password\",\n      name: \"password\",\n      rules: [{\n        required: true,\n        message: \"Please input your password!\"\n      }],\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 60\n      },\n      __self: this\n    }, React.createElement(Input.Password, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 70\n      },\n      __self: this\n    })), React.createElement(Form.Item, Object.assign({}, tailLayout, {\n      name: \"remember\",\n      valuePropName: \"checked\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 73\n      },\n      __self: this\n    }), React.createElement(Checkbox, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 74\n      },\n      __self: this\n    }, \"Remember me\")), React.createElement(Form.Item, Object.assign({}, tailLayout, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 77\n      },\n      __self: this\n    }), React.createElement(Button, {\n      type: \"primary\",\n      htmlType: \"submit\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 78\n      },\n      __self: this\n    }, \"Submit\"))) // <div className=\"form-group\">\n    //   <label htmlFor=\"Name\">Name</label>\n    //   <input\n    //     name=\"Name\"\n    //     placeholder=\"Enter Your Name\"\n    //     id=\"name\"\n    //     value={this.props.name}\n    //     onChange={this.props.handleChange}\n    //   />\n    //   <label htmlFor=\"email\">Email address</label>\n    //   <input\n    //     className=\"form-control\"\n    //     id=\"email\"\n    //     name=\"email\"\n    //     type=\"text\"\n    //     placeholder=\"Enter email\"\n    //     value={this.props.email} // Prop: The email input data\n    //     onChange={this.props.handleChange} // Prop: Puts data into state\n    //   />\n    // </div>\n    ;\n  }\n\n}\n\nexport default step1;","map":{"version":3,"sources":["/Users/xunda.zhang/Documents/Developer/Misc/fe_package/team8-portfolio-optimizer-/src/components/BasicInfo.js"],"names":["React","useForm","Component","Form","Input","Button","Checkbox","UserOutlined","step1","onFinish","values","console","log","onFinishFailed","errorInfo","render","layout","labelCol","span","wrapperCol","tailLayout","offset","props","currentStep","remember","required","message"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,OAAT,QAAwB,iBAAxB;AACA,SAASC,SAAT,QAA0B,OAA1B;AACA,SAASC,IAAT,EAAeC,KAAf,EAAsBC,MAAtB,EAA8BC,QAA9B,QAA8C,MAA9C;AACA,SAASC,YAAT,QAA6B,mBAA7B;;AAEA,MAAMC,KAAN,SAAoBN,SAApB,CAA8B;AAAA;AAAA;;AAAA,SAC5BO,QAD4B,GAChBC,MAAD,IAAY;AACrBC,MAAAA,OAAO,CAACC,GAAR,CAAY,UAAZ,EAAwBF,MAAxB;AACD,KAH2B;;AAAA,SAK5BG,cAL4B,GAKVC,SAAD,IAAe;AAC9BH,MAAAA,OAAO,CAACC,GAAR,CAAY,SAAZ,EAAuBE,SAAvB;AACD,KAP2B;AAAA;;AAS5BC,EAAAA,MAAM,GAAG;AACP,UAAMC,MAAM,GAAG;AACbC,MAAAA,QAAQ,EAAE;AACRC,QAAAA,IAAI,EAAE;AADE,OADG;AAIbC,MAAAA,UAAU,EAAE;AACVD,QAAAA,IAAI,EAAE;AADI;AAJC,KAAf;AAQA,UAAME,UAAU,GAAG;AACjBD,MAAAA,UAAU,EAAE;AACVE,QAAAA,MAAM,EAAE,CADE;AAEVH,QAAAA,IAAI,EAAE;AAFI;AADK,KAAnB;;AAOA,QAAI,KAAKI,KAAL,CAAWC,WAAX,KAA2B,CAA/B,EAAkC;AAChC;AACA,aAAO,IAAP;AACD,KAnBM,CAoBP;;;AACA,WACE,oBAAC,IAAD,oBACMP,MADN;AAEE,MAAA,IAAI,EAAC,OAFP;AAGE,MAAA,aAAa,EAAE;AACbQ,QAAAA,QAAQ,EAAE;AADG,OAHjB;AAME,MAAA,QAAQ,EAAE,KAAKf,QANjB;AAOE,MAAA,cAAc,EAAE,KAAKI,cAPvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QASE,oBAAC,IAAD,CAAM,IAAN;AACE,MAAA,KAAK,EAAC,UADR;AAEE,MAAA,IAAI,EAAC,UAFP;AAGE,MAAA,KAAK,EAAE,CACL;AACEY,QAAAA,QAAQ,EAAE,IADZ;AAEEC,QAAAA,OAAO,EAAE;AAFX,OADK,CAHT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAUE,oBAAC,KAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAVF,CATF,EAsBE,oBAAC,IAAD,CAAM,IAAN;AACE,MAAA,KAAK,EAAC,UADR;AAEE,MAAA,IAAI,EAAC,UAFP;AAGE,MAAA,KAAK,EAAE,CACL;AACED,QAAAA,QAAQ,EAAE,IADZ;AAEEC,QAAAA,OAAO,EAAE;AAFX,OADK,CAHT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAUE,oBAAC,KAAD,CAAO,QAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAVF,CAtBF,EAmCE,oBAAC,IAAD,CAAM,IAAN,oBAAeN,UAAf;AAA2B,MAAA,IAAI,EAAC,UAAhC;AAA2C,MAAA,aAAa,EAAC,SAAzD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QACE,oBAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBADF,CAnCF,EAuCE,oBAAC,IAAD,CAAM,IAAN,oBAAeA,UAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QACE,oBAAC,MAAD;AAAQ,MAAA,IAAI,EAAC,SAAb;AAAuB,MAAA,QAAQ,EAAC,QAAhC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADF,CAvCF,CADF,CA8CE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAlEF;AAoED;;AAlG2B;;AAoG9B,eAAeZ,KAAf","sourcesContent":["import React from \"react\";\nimport { useForm } from \"react-hook-form\";\nimport { Component } from \"react\";\nimport { Form, Input, Button, Checkbox } from \"antd\";\nimport { UserOutlined } from \"@ant-design/icons\";\n\nclass step1 extends Component {\n  onFinish = (values) => {\n    console.log(\"Success:\", values);\n  };\n\n  onFinishFailed = (errorInfo) => {\n    console.log(\"Failed:\", errorInfo);\n  };\n\n  render() {\n    const layout = {\n      labelCol: {\n        span: 8,\n      },\n      wrapperCol: {\n        span: 16,\n      },\n    };\n    const tailLayout = {\n      wrapperCol: {\n        offset: 8,\n        span: 16,\n      },\n    };\n\n    if (this.props.currentStep !== 1) {\n      // Prop: The current step\n      return null;\n    }\n    // The markup for the Step 1 UI\n    return (\n      <Form\n        {...layout}\n        name=\"basic\"\n        initialValues={{\n          remember: true,\n        }}\n        onFinish={this.onFinish}\n        onFinishFailed={this.onFinishFailed}\n      >\n        <Form.Item\n          label=\"Username\"\n          name=\"username\"\n          rules={[\n            {\n              required: true,\n              message: \"Please input your username!\",\n            },\n          ]}\n        >\n          <Input />\n        </Form.Item>\n\n        <Form.Item\n          label=\"Password\"\n          name=\"password\"\n          rules={[\n            {\n              required: true,\n              message: \"Please input your password!\",\n            },\n          ]}\n        >\n          <Input.Password />\n        </Form.Item>\n\n        <Form.Item {...tailLayout} name=\"remember\" valuePropName=\"checked\">\n          <Checkbox>Remember me</Checkbox>\n        </Form.Item>\n\n        <Form.Item {...tailLayout}>\n          <Button type=\"primary\" htmlType=\"submit\">\n            Submit\n          </Button>\n        </Form.Item>\n      </Form>\n      // <div className=\"form-group\">\n      //   <label htmlFor=\"Name\">Name</label>\n      //   <input\n      //     name=\"Name\"\n      //     placeholder=\"Enter Your Name\"\n      //     id=\"name\"\n      //     value={this.props.name}\n      //     onChange={this.props.handleChange}\n      //   />\n\n      //   <label htmlFor=\"email\">Email address</label>\n      //   <input\n      //     className=\"form-control\"\n      //     id=\"email\"\n      //     name=\"email\"\n      //     type=\"text\"\n      //     placeholder=\"Enter email\"\n      //     value={this.props.email} // Prop: The email input data\n      //     onChange={this.props.handleChange} // Prop: Puts data into state\n      //   />\n      // </div>\n    );\n  }\n}\nexport default step1;\n"]},"metadata":{},"sourceType":"module"}